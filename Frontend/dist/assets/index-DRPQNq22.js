const i=r=>new Promise((a,n)=>{const t=new FileReader;t.onload=()=>{const{result:e}=t;e instanceof ArrayBuffer?a(new Uint8Array(e)):a(new Uint8Array)},t.onerror=e=>{var o,s;n(Error(`File could not be read! Code=${((s=(o=e==null?void 0:e.target)==null?void 0:o.error)==null?void 0:s.code)||-1}`))},t.readAsArrayBuffer(r)}),c=async r=>{let a;if(typeof r=="string")/data:_data\/([a-zA-Z]*);base64,([^"]*)/.test(r)?a=atob(r.split(",")[1]).split("").map(n=>n.charCodeAt(0)):a=await(await fetch(r)).arrayBuffer();else if(r instanceof URL)a=await(await fetch(r)).arrayBuffer();else if(r instanceof File||r instanceof Blob)a=await i(r);else return new Uint8Array;return new Uint8Array(a)};export{c as fetchFile};
